<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AirQuality" xml:space="preserve">
    <value>Качество воздуха</value>
    <comment>AirQuality</comment>
  </data>
  <data name="Altitude" xml:space="preserve">
    <value>Высота над уровнем моря</value>
    <comment>Altitude</comment>
  </data>
  <data name="App_text" xml:space="preserve">
    <value>Моя погода</value>
    <comment>Заголовок приложения</comment>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Инфо</value>
    <comment>Info map</comment>
  </data>
  <data name="LabelCeiling" xml:space="preserve">
    <value>Высота облаков</value>
    <comment>Label Cloud Ceiling</comment>
  </data>
  <data name="LabelCloudCover" xml:space="preserve">
    <value>Облачность</value>
    <comment>Облачность</comment>
  </data>
  <data name="LabelDewPoint" xml:space="preserve">
    <value>Точка росы</value>
    <comment>LabelDewPoint</comment>
  </data>
  <data name="LabelHeadingPageCurrentConditions" xml:space="preserve">
    <value>Сейчас</value>
    <comment>Заголовок страницы текущего прогноза</comment>
  </data>
  <data name="LabelHeadingPageDailyForecast" xml:space="preserve">
    <value>День</value>
    <comment>Заголовок страницы дневного прогноза</comment>
  </data>
  <data name="LabelHoursPrecipitation" xml:space="preserve">
    <value>Осадки, часы</value>
    <comment>Осадки, часы</comment>
  </data>
  <data name="LabelHumidity" xml:space="preserve">
    <value>Влажность</value>
    <comment>Label Humidity</comment>
  </data>
  <data name="LabelIndoorHumidity" xml:space="preserve">
    <value>Воздух в помещении</value>
    <comment>LabelIndoorHumidity</comment>
  </data>
  <data name="LabelPrecipitation" xml:space="preserve">
    <value>Осадки</value>
    <comment>Осадки</comment>
  </data>
  <data name="LabelPrecipitationProbability" xml:space="preserve">
    <value>Вероятность осадков</value>
    <comment>Label Probability of Precipitation</comment>
  </data>
  <data name="LabelPressure" xml:space="preserve">
    <value>Давление</value>
    <comment>LabelPressure</comment>
  </data>
  <data name="LabelTempMax" xml:space="preserve">
    <value>Макс</value>
    <comment>Макс t</comment>
  </data>
  <data name="LabelTempMin" xml:space="preserve">
    <value>Мин</value>
    <comment>Мин t</comment>
  </data>
  <data name="LabelThunderstormProbability" xml:space="preserve">
    <value>Вероятность гроз</value>
    <comment>Вероятность гроз</comment>
  </data>
  <data name="LabelUVIndex" xml:space="preserve">
    <value>Макс УФ индекс</value>
    <comment>Label Max UV Index</comment>
  </data>
  <data name="LabelVisibility" xml:space="preserve">
    <value>Видимость</value>
    <comment>LabelVisibility</comment>
  </data>
  <data name="LabelWind" xml:space="preserve">
    <value>Ветер</value>
    <comment>Label Wind</comment>
  </data>
  <data name="LabelWindGust" xml:space="preserve">
    <value>Порывы ветра</value>
    <comment>Label Wind Gust</comment>
  </data>
  <data name="Lang" xml:space="preserve">
    <value>Язык</value>
    <comment>ExpanderLang Header</comment>
  </data>
  <data name="Latitude" xml:space="preserve">
    <value>Широта</value>
    <comment>Latitude</comment>
  </data>
  <data name="Longitude" xml:space="preserve">
    <value>Долгота</value>
    <comment>Longitude</comment>
  </data>
  <data name="Map" xml:space="preserve">
    <value>Карта</value>
    <comment>Карта</comment>
  </data>
  <data name="MapMode" xml:space="preserve">
    <value>Изменить режим карты</value>
    <comment>Button MapMode</comment>
  </data>
  <data name="MenuButton" xml:space="preserve">
    <value>Меню</value>
    <comment>Кнопка Меню</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>ru-RU</value>
    <comment>Язык текущей культуры</comment>
  </data>
  <data name="Night" xml:space="preserve">
    <value>Ночь</value>
    <comment>Night</comment>
  </data>
  <data name="RealFeel" xml:space="preserve">
    <value>По ощущениям ®</value>
    <comment>По ощущениям</comment>
  </data>
  <data name="RealFeelShade" xml:space="preserve">
    <value>По ощущениям в тени™</value>
    <comment>По ощущениям в тени</comment>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Обновить</value>
    <comment>ImageRefresh</comment>
  </data>
</root>