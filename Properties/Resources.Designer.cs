//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My_Weather.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("My_Weather.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на My Weather.
        /// </summary>
        public static string App_text {
            get {
                return ResourceManager.GetString("App_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CURRENT CONDITIONS.
        /// </summary>
        public static string LabelHeadingPageCurrentConditions {
            get {
                return ResourceManager.GetString("LabelHeadingPageCurrentConditions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DAILY.
        /// </summary>
        public static string LabelHeadingPageDailyForecast {
            get {
                return ResourceManager.GetString("LabelHeadingPageDailyForecast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Precipitation.
        /// </summary>
        public static string LabelPrecipitation {
            get {
                return ResourceManager.GetString("LabelPrecipitation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Probability of Precipitation.
        /// </summary>
        public static string LabelPrecipitationProbability {
            get {
                return ResourceManager.GetString("LabelPrecipitationProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RealFeel ®.
        /// </summary>
        public static string LabelRealFeel {
            get {
                return ResourceManager.GetString("LabelRealFeel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RealFeel Shade™.
        /// </summary>
        public static string LabelRealFeelShade {
            get {
                return ResourceManager.GetString("LabelRealFeelShade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Max.
        /// </summary>
        public static string LabelTempMax {
            get {
                return ResourceManager.GetString("LabelTempMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Min.
        /// </summary>
        public static string LabelTempMin {
            get {
                return ResourceManager.GetString("LabelTempMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Probability of Thunderstorms.
        /// </summary>
        public static string LabelThunderstormProbability {
            get {
                return ResourceManager.GetString("LabelThunderstormProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Max UV Index.
        /// </summary>
        public static string LabelUVIndex {
            get {
                return ResourceManager.GetString("LabelUVIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wind.
        /// </summary>
        public static string LabelWind {
            get {
                return ResourceManager.GetString("LabelWind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wind Gusts.
        /// </summary>
        public static string LabelWindGust {
            get {
                return ResourceManager.GetString("LabelWindGust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Menu.
        /// </summary>
        public static string MenuButton {
            get {
                return ResourceManager.GetString("MenuButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на en.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
    }
}
